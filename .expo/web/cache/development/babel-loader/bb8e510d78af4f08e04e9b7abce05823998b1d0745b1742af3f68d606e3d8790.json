{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\office-runner-clean\\\\screens\\\\LoginScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Picker } from '@react-native-picker/picker';\nimport BASE_URL from '../config';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = ({\n  navigation\n}) => {\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('runner');\n  const handleLogin = async () => {\n    if (!phone || !password) {\n      Alert.alert('Error', 'Please enter phone and password');\n      return;\n    }\n    try {\n      const response = await fetch(`${BASE_URL}/api/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phone,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (data.user.role !== role) {\n          Alert.alert('Role Mismatch', `You are not registered as ${role}`);\n          return;\n        }\n        await AsyncStorage.setItem('user', JSON.stringify(data.user));\n        if (role === 'runner') navigation.navigate('RunnerDashboard', {\n          user: data.user\n        });else if (role === 'manager') navigation.navigate('ManagerDashboard', {\n          user: data.user\n        });else if (role === 'admin') navigation.navigate('AdminDashboard', {\n          user: data.user\n        });\n      } else {\n        Alert.alert('Login Failed', data.message || 'Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      Alert.alert('Error', 'Unable to connect to server');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: {\n        alignItems: 'center',\n        marginBottom: 20\n      },\n      children: [_jsxDEV(Image, {\n        source: require('../assets/Logo.png'),\n        style: {\n          width: 240,\n          height: 240,\n          resizeMode: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: 'bold',\n          color: '#fff',\n          marginTop: 10\n        },\n        children: \"DBX Runner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), _jsxDEV(Picker, {\n      selectedValue: role,\n      onValueChange: itemValue => setRole(itemValue),\n      style: styles.picker,\n      children: [_jsxDEV(Picker.Item, {\n        label: \"Runner\",\n        value: \"runner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), _jsxDEV(Picker.Item, {\n        label: \"Manager\",\n        value: \"manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), _jsxDEV(Picker.Item, {\n        label: \"Admin\",\n        value: \"admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Phone\",\n      keyboardType: \"numeric\",\n      value: phone,\n      onChangeText: setPhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\nexport default LoginScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#001F54',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 30\n  },\n  logo: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFA500',\n    marginBottom: 30\n  },\n  input: {\n    backgroundColor: '#fff',\n    width: '100%',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 15,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#FFA500',\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 10,\n    width: '100%',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#001F54',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 18\n  },\n  picker: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    marginBottom: 15,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","AsyncStorage","Picker","BASE_URL","Image","jsxDEV","_jsxDEV","LoginScreen","navigation","phone","setPhone","password","setPassword","role","setRole","handleLogin","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","user","setItem","navigate","message","error","console","style","styles","container","children","alignItems","marginBottom","source","require","width","height","resizeMode","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","marginTop","selectedValue","onValueChange","itemValue","picker","Item","label","value","input","placeholder","keyboardType","onChangeText","secureTextEntry","button","onPress","buttonText","create","flex","backgroundColor","justifyContent","paddingHorizontal","logo","borderRadius","paddingVertical","textAlign"],"sources":["C:/Projects/office-runner-clean/screens/LoginScreen.js"],"sourcesContent":["// LoginScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport BASE_URL from '../config';\r\nimport { Image } from 'react-native';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('runner'); // default selection\r\n\r\n  const handleLogin = async () => {\r\n    if (!phone || !password) {\r\n      Alert.alert('Error', 'Please enter phone and password');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/api/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ phone, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        if (data.user.role !== role) {\r\n          Alert.alert('Role Mismatch', `You are not registered as ${role}`);\r\n          return;\r\n        }\r\n\r\n        await AsyncStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n        if (role === 'runner') navigation.navigate('RunnerDashboard', { user: data.user });\r\nelse if (role === 'manager') navigation.navigate('ManagerDashboard', { user: data.user });\r\nelse if (role === 'admin') navigation.navigate('AdminDashboard', { user: data.user });\r\n      } else {\r\n        Alert.alert('Login Failed', data.message || 'Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      Alert.alert('Error', 'Unable to connect to server');\r\n    }\r\n  };\r\n\r\n  return (\r\n  <View style={styles.container}>\r\n    <View style={{ alignItems: 'center', marginBottom: 20 }}>\r\n      <Image\r\n        source={require('../assets/Logo.png')}\r\n        style={{ width: 240, height: 240, resizeMode: 'contain' }}\r\n      />\r\n      <Text style={{ fontSize: 24, fontWeight: 'bold', color: '#fff', marginTop: 10 }}>\r\n        DBX Runner\r\n      </Text>\r\n    </View>\r\n\r\n    <Picker\r\n      selectedValue={role}\r\n      onValueChange={(itemValue) => setRole(itemValue)}\r\n      style={styles.picker}\r\n    >\r\n      <Picker.Item label=\"Runner\" value=\"runner\" />\r\n      <Picker.Item label=\"Manager\" value=\"manager\" />\r\n      <Picker.Item label=\"Admin\" value=\"admin\" />\r\n    </Picker>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Phone\"\r\n        keyboardType=\"numeric\"\r\n        value={phone}\r\n        onChangeText={setPhone}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n\r\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n        <Text style={styles.buttonText}>Login</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#001F54',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 30,\r\n  },\r\n  logo: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#FFA500',\r\n    marginBottom: 30,\r\n  },\r\n  input: {\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    marginBottom: 15,\r\n    fontSize: 16,\r\n  },\r\n  \r\n  button: {\r\n    backgroundColor: '#FFA500',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: '#001F54',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n  },\r\npicker: {\r\n  backgroundColor: '#fff',\r\n  borderRadius: 10,\r\n  width: '100%',\r\n  height: 50, // 👈 Increase height for better touchability\r\n  justifyContent: 'center',\r\n  marginBottom: 15,\r\n  paddingHorizontal: 10,\r\n},\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}