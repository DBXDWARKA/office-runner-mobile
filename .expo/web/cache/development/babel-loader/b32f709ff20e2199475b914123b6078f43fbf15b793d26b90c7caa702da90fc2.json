{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\office-runner-clean\\\\screens\\\\LoginScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport BASE_URL from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = ({\n  navigation\n}) => {\n  const [phone, setphone] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    if (!phone || !password) {\n      Alert.alert('Error', 'Please enter phone and password');\n      return;\n    }\n    try {\n      const response = await fetch(`${BASE_URL}/api/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phone,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        await AsyncStorage.setItem('user', JSON.stringify(data.user));\n        if (data.user.role === 'runner') {\n          navigation.navigate('RunnerDashboard');\n        } else {\n          navigation.navigate('ManagerDashboard');\n        }\n      } else {\n        Alert.alert('Login Failed', data.message || 'Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      Alert.alert('Error', 'Unable to connect to server');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.logo,\n      children: \"Office Runner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"phone\",\n      keyboardType: \"numeric\",\n      value: phone,\n      onChangeText: setphone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\nexport default LoginScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#001F54',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 30\n  },\n  logo: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFA500',\n    marginBottom: 40\n  },\n  input: {\n    backgroundColor: '#fff',\n    width: '100%',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    marginBottom: 20,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#FFA500',\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 10,\n    width: '100%'\n  },\n  buttonText: {\n    color: '#001F54',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","AsyncStorage","BASE_URL","jsxDEV","_jsxDEV","LoginScreen","navigation","phone","setphone","password","setPassword","handleLogin","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setItem","user","role","navigate","message","error","console","style","styles","container","children","logo","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","keyboardType","value","onChangeText","secureTextEntry","button","onPress","buttonText","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","fontSize","fontWeight","color","marginBottom","width","borderRadius","paddingVertical","textAlign"],"sources":["C:/Projects/office-runner-clean/screens/LoginScreen.js"],"sourcesContent":["// LoginScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport BASE_URL from '../config';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [phone, setphone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    if (!phone || !password) {\r\n      Alert.alert('Error', 'Please enter phone and password');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/api/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ phone, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        await AsyncStorage.setItem('user', JSON.stringify(data.user));\r\n        if (data.user.role === 'runner') {\r\n          navigation.navigate('RunnerDashboard');\r\n        } else {\r\n          navigation.navigate('ManagerDashboard');\r\n        }\r\n      } else {\r\n        Alert.alert('Login Failed', data.message || 'Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      Alert.alert('Error', 'Unable to connect to server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.logo}>Office Runner</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"phone\"\r\n        keyboardType=\"numeric\"\r\n        value={phone}\r\n        onChangeText={setphone}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n        <Text style={styles.buttonText}>Login</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#001F54', // Deep Blue\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 30,\r\n  },\r\n  logo: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#FFA500', // Orange\r\n    marginBottom: 40,\r\n  },\r\n  input: {\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    marginBottom: 20,\r\n    fontSize: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#FFA500',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 10,\r\n    width: '100%',\r\n  },\r\n  buttonText: {\r\n    color: '#001F54',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}